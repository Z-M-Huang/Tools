name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, '[deploy only]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: npm install
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
        qemu-version: latest
    - name: Docker Login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" > ~/cred.txt
        cat ~/cred.txt | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Clean Docker cred
      run: rm ~/cred.txt
    - name: Build using buildx
      run: | 
        docker buildx build \
          --platform linux/amd64,linux/arm/v7 --push \
          -t zhironghuang/tools-web:latest \
          -t zhironghuang/tools-web:${{ github.run_id }} .
    - name: Docker Logout
      run: |
        docker logout
        rm ~/.docker/config.json

  deploy:
    name: deploy
    needs: build
    runs-on: self-hosted
    steps:      
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        DB_DRIVER: ${{ secrets.DB_DRIVER }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        HOST: ${{ secrets.HOST }}
        JWT_KEY: ${{ secrets.JWT_KEY }}
        REDIS_ADDR: ${{ secrets.REDIS_ADDR }}
        CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
        ENABLE_SITEMAP: ${{ secrets.ENABLE_SITEMAP }}
        SITEMAP_HTTPS: ${{ secrets.SITEMAP_HTTPS }}
        GIN_MODE: ${{ secrets.GIN_MODE }}
      run: |
        export DB_DRIVER GOOGLE_CLIENT_ID GOOGLE_CLIENT_SECRET HOST JWT_KEY REDIS_ADDR CONNECTION_STRING ENABLE_SITEMAP SITEMAP_HTTPS GIN_MODE
        docker stack deploy -c docker-compose.yml --with-registry-auth Tools
    
          